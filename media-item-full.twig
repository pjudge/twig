{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * This is the Media List display mode used in Related Content Views.
 */
#}

<article{{ attributes }}>
{{ title_prefix }}
{{ title_suffix }}
  <div class="media-item row v-align-middle">
    <div class="media-item-image col-4">
      <a href="{{ link }}">
      {{ image }}
      </a>
    </div>

    <div class="media-item-content col-8">
      {{ tag }}

      {% if es_link %}<div class="es-link">{% endif %}
        <h3{{ title_attributes.addClass('media-item-title') }}>
          <a href="{{ link }}" rel="bookmark">{{ heading }}</a>
        </h3>

        {% if es_link %}
          <span class="text-small">&nbsp;|&nbsp;<a href="{{ es_link }}">En espa&ntilde;ol</a></span>
        </div>
      {% endif %}

      {# At least one custom block type and one CT don't need dates printed. #}
      {% if no_date %}
        {{ description }}
        {% if ext_link_url %}
          <div class="text-button pt-1-2">
            <a href="{{ ext_link_url }}">{{ ext_link_text }}&nbsp;<i class="fas fa-arrow-circle-right"></i></a>
          </div>
        {% endif %}
      {% else %}
      <div class="media-item-blurb text-small desktop-only">
        <span class="meta-data date text-small">
          {# Some views use revised date #}
          {% if revised_date %}
            {{ revised_date }}</span>&nbsp;|&nbsp;
          {% elseif posted_date %}
            {{ posted_date }}</span>&nbsp;|&nbsp;
          {% else %}
            {{ authored_date }}</span>&nbsp;|&nbsp;
          {% endif %}
        {{ description }}

        {% if blog_comments %}
          <div class="comment-count pt-0-6">
            <a href="{{ link }}#add-comment">
            {% if blog_comments == 1 %}
            {{ blog_comments }} Comment
            {% else %}
            {{ blog_comments }} Comments
            {% endif %}
            </a>
          </div>
        {% endif %}
      </div>
      {% endif %}
    </div>
  </div>
</article>
